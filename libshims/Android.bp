cc_library_shared {
    name: "libbinder_shim",
    srcs: ["libbinder/IInterface.cpp"],
    shared_libs: [
        "libbinder",
        "libutils",
    ],
}

cc_library_shared {
    name: "libcutils_shim",
    srcs: ["libcutils/atomic.cpp"],
    shared_libs: ["libcutils"],
}

cc_library_shared {
    name: "libcrypto_shim",
    srcs: [
        "libcrypto/cipher.cpp",
        "libcrypto/mem.cpp",
    ],
    shared_libs: [
        "libcrypto",
    ],
}

cc_library_shared {
    name: "libgui_shim",
    srcs: [
        "libgui/BufferQueue.cpp",
        "libgui/Fence.cpp",
        "libgui/SurfaceControl.cpp",
        "libgui/SurfaceComposerClient.cpp",
    ],
    shared_libs: [
        "libbinder",
        "libgui",
        "libui",
        "libutils",
    ],
}

cc_library {
    name: "libmemset_shim",
    vendor: true,
    target: {
        android_arm: {
            srcs: ["libc/memset32.S"],
            sanitize: {
                misc_undefined: ["integer"],
            },
        },
        android_arm64: {
            srcs: ["libc/android_memset.S"],
            sanitize: {
                misc_undefined: ["integer"],
            },
        },
    },
}

cc_library {
    name: "libpthread_shim",
    shared_libs: ["libc"],
    srcs: [
        "libc/pthread_cond_timedwait.cpp",
        "libc/pthread_mutex_destroy.cpp",
    ],
    sanitize: { 
        never: true
    },
    stl: "none",
}

cc_library_shared {
    name: "libskia_shim",
    srcs: ["libskia/SkBitmap.cpp"],
    shared_libs: ["libhwui"],
}

cc_library_shared {
    name: "libssl_shim",
    srcs: [
        "libssl/conf.cpp",
        "libssl/obj.cpp",
    ],
    shared_libs: [
        "libcrypto",
        "libssl",
    ],
}

cc_library_shared {
    name: "libui_shim",
    srcs: [
        "libui/GraphicBuffer.cpp",
        "libui/GraphicBufferMapper.cpp",
    ],
    shared_libs: ["libui"],
}

cc_library_shared {
    name: "libutils_shim",
    srcs: ["libutils/Threads.cpp"],
    shared_libs: ["libutils"],
}
